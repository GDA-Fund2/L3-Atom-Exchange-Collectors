#!/usr/bin/bash
#
# Starts all Kafka consumers, normalisers, and the main websocket server.

ws_paths=()
while IFS=  read -r -d $'\0'; do
    ws_paths+=("$REPLY")
done < <(find . -name "*ws*.py" -print0)

producer_paths=()
while IFS=  read -r -d $'\0'; do
    producer_paths+=("$REPLY")
done < <(find . -name "main.py" -print0)

function py_bg {
    python3.9 $1 2>&1 > /dev/null &
    if [ $# -eq 2 ]; then
        pids+=("$!")
    fi
}

function run_ws_collectors {
    for s in ${ws_paths[@]}; do
        echo "Running $s collector in background..."
        py_bg "$s" pids
    done
}

function run_normalisers {
    for s in ${producer_paths[@]}; do
        echo "Running $s producer in background..."
        py_bg "$s" pids
    done
}

function run_server {
    echo "Running main server."
    python3.9 server.py > log.out &
    SERVER_PID=$!
    pids+=("$SERVER_PID")
}

if [ $# -eq 1 ]; then
    if [ "$1" = "ws_collectors" ]; then
        echo "Running raw collectors only"
        run_ws_collectors
    elif [ "$1" = "normalisers" ]; then
        echo "Running normalisers only"
        run_normalisers
    elif [ "$1" = "server" ]; then
        echo "Running server only"
        run_server
    elif [ "$1" = "collectors" ]; then
        echo "Running collectors only"
        run_ws_collectors
        run_normalisers
    elif [ "$1" = "cs" ]; then
        echo "Running raw collectors and server"
        run_ws_collectors
        run_server
    else
        echo "Second argument should be 'ws_collectors', 'normalisers', 'collectors', 'cs' or 'server'"
        exit 1
    fi
else 
    run_ws_collectors
    run_normalisers
    run_server
fi

echo "Server PID: $SERVER_PID"
echo "PIDS: ${pids[@]}"
echo "${pids[@]}" > pids.ids
